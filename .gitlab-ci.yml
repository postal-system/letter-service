stages:
  - build
  - push-image
  - deploy

build:
  stage: build
  image: maven:3.6-jdk-11
  artifacts:
    paths:
      - ./target/
    expire_in: 1 day
  script:
    - echo "$MAVEN_SETTINGS" > ~/.m2/settings.xml
    - mvn clean package -PtraineeshipPomTemplate
  allow_failure: false

push-image:
  stage: push-image
  image: maven:3.8.4-jdk-11
  artifacts:
    paths:
      - ./target/
    expire_in: 1 day
  script:
    - echo "$MAVEN_SETTINGS" > ~/.m2/settings.xml
    - mvn clean deploy -P traineeshipPomTemplate,traineeshipImageDeploy
  needs:
    - build
  when: manual
  allow_failure: false

deploy:
  image: debian:10
  stage: deploy
  needs:
    - build
  when: manual
  variables:
    DEPLOY_WEB_HOST: "130.193.56.118"
    DEPLOY_FOLDER: "/opt/apps/${CI_PROJECT_NAME}"
    DEPLOY_USER: centos
    IMAGE_HOST: "nexus.aimc.io:8085"
  before_script:
    - echo ${CI_JOB_TIMESTAMP}
    - apt-get update -y
    - apt-get -y install rsync openssh-client
    - mkdir "${HOME}/.ssh"
    - echo "${DEPLOY_KEY_TRAINEESHIP}" > ${HOME}/.ssh/id_rsa
    - chmod 700 ${HOME}/.ssh/id_rsa
    - ssh-keyscan -H ${DEPLOY_WEB_HOST} >> ${HOME}/.ssh/known_hosts
  script:
    - rsync -aRv ./docker-compose.yml ${DEPLOY_USER}@${DEPLOY_WEB_HOST}:${DEPLOY_FOLDER}
    - ssh -o StrictHostKeyChecking=no centos@${DEPLOY_WEB_HOST} -i ~/.ssh/id_rsa
      "sudo docker login ${IMAGE_HOST} --username ${IMAGE_HOST_USERNAME} --password ${IMAGE_HOST_PASSWORD}"
    - ssh -o StrictHostKeyChecking=no centos@${DEPLOY_WEB_HOST} -i ~/.ssh/id_rsa
      "sudo docker-compose -f ${DEPLOY_FOLDER}/docker-compose.yml pull"
    - ssh -o StrictHostKeyChecking=no centos@${DEPLOY_WEB_HOST} -i ~/.ssh/id_rsa
      "sudo docker-compose -f ${DEPLOY_FOLDER}/docker-compose.yml up -d"
